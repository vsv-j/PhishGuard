<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

  <changeSet id="0-create-update-timestamp-function" author="phishguard-dev">
    <comment>Creates a reusable function to update the 'updated_at' column on row updates.</comment>
    <sql splitStatements="false">
      CREATE OR REPLACE FUNCTION update_timestamp()
      RETURNS TRIGGER AS $$
      BEGIN
         NEW.updated_at = now();
      RETURN NEW;
      END;
      $$ language 'plpgsql';
    </sql>
    <rollback>
      DROP FUNCTION IF EXISTS update_timestamp();
    </rollback>
  </changeSet>

  <changeSet id="1-create-subscribers-table" author="phishguard-dev">
    <comment>Create subscribers table to track opt-ins</comment>
    <createTable tableName="subscribers">
      <column name="id" type="UUID" defaultValueComputed="gen_random_uuid()">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="version" type="BIGINT" defaultValueNumeric="0">
        <constraints nullable="false"/>
      </column>
      <column name="phone_number" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="phone_number_hash" type="VARCHAR(64)">
        <constraints nullable="false" unique="true"/>
      </column>
      <column name="is_active" type="BOOLEAN" defaultValueBoolean="true">
        <constraints nullable="false"/>
      </column>
      <column name="created_at" type="TIMESTAMPTZ" defaultValueComputed="CURRENT_TIMESTAMP">
        <constraints nullable="false"/>
      </column>
      <column name="updated_at" type="TIMESTAMPTZ" defaultValueComputed="CURRENT_TIMESTAMP">
        <constraints nullable="false"/>
      </column>
    </createTable>

    <sql splitStatements="false">
      CREATE TRIGGER subscribers_update_trigger
        BEFORE UPDATE ON subscribers
        FOR EACH ROW
        EXECUTE PROCEDURE update_timestamp();
    </sql>
    <rollback>
      DROP TRIGGER IF EXISTS subscribers_update_trigger ON subscribers;
      DROP TABLE IF EXISTS subscribers;
    </rollback>
  </changeSet>

  <changeSet id="2-create-sms-messages-table" author="phishguard-dev">
    <comment>Create sms_messages table for auditing and processing</comment>
    <createTable tableName="sms_messages">
      <column name="id" type="UUID" defaultValueComputed="gen_random_uuid()">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="idempotency_key" type="VARCHAR(255)">
        <constraints nullable="false" unique="true" uniqueConstraintName="uk_sms_idempotency_key"/>
      </column>
      <column name="version" type="BIGINT" defaultValueNumeric="0">
        <constraints nullable="false"/>
      </column>
      <column name="sender" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="recipient" type="VARCHAR(255)">
        <constraints nullable="false"/>
      </column>
      <column name="message_content" type="TEXT">
        <constraints nullable="false"/>
      </column>
      <column name="status" type="VARCHAR(50)">
        <constraints nullable="false"/>
      </column>
      <column name="created_at" type="TIMESTAMPTZ" defaultValueComputed="CURRENT_TIMESTAMP">
        <constraints nullable="false"/>
      </column>
      <column name="updated_at" type="TIMESTAMPTZ" defaultValueComputed="CURRENT_TIMESTAMP">
        <constraints nullable="false"/>
      </column>
    </createTable>

    <sql splitStatements="false">
      CREATE TRIGGER sms_messages_update_trigger
        BEFORE UPDATE ON sms_messages
        FOR EACH ROW
        EXECUTE PROCEDURE update_timestamp();
    </sql>
    <rollback>
      DROP TRIGGER IF EXISTS sms_messages_update_trigger ON sms_messages;
      DROP TABLE IF EXISTS sms_messages;
    </rollback>
  </changeSet>

  <changeSet id="3-create-url-analysis-cache-table" author="phishguard-dev">
    <comment>Create url_analysis_cache to reduce external API calls</comment>
    <createTable tableName="url_analysis_cache">
      <column name="id" type="UUID" defaultValueComputed="gen_random_uuid()">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="url_hash" type="VARCHAR(64)">
        <constraints nullable="false" unique="true"/>
      </column>
      <column name="is_phishing" type="BOOLEAN">
        <constraints nullable="false"/>
      </column>
      <column name="last_checked_at" type="TIMESTAMPTZ">
        <constraints nullable="false"/>
      </column>
    </createTable>
    <rollback>
      DROP TABLE IF EXISTS url_analysis_cache;
    </rollback>
  </changeSet>

</databaseChangeLog>