# ===================================================================
# PHISHGUARD APPLICATION CONFIGURATION
# ===================================================================

spring.jpa.open-in-view=false

# -- Actuator --
# Expose the health endpoint over the web. Use '*' to expose all, but 'health' is safer.
management.endpoints.web.exposure.include=health,metrics

# -- Service Configuration --
phishguard.service.phone-number=${PHISHGUARD_SERVICE_PHONE_NUMBER}

# -- Kafka Topics --
phishguard.kafka.topic.sms-analysis-requests=sms-analysis-requests

# -- Data Retention Policies --
phishguard.messages.retention-days=180
phishguard.cache.retention-days=30

# -- Scheduler Cron Expressions --
phishguard.cache.cleanup-cron=0 0 6 * * ?
phishguard.messages.cleanup-cron=0 0 5 * * ?

# ===================================================================
# EXTERNAL SERVICES CONFIGURATION
# ===================================================================

# -- Google Web Risk API --
google.webrisk.api-key=${GOOGLE_WEBRISK_API_KEY}
google.webrisk.base-url=${GOOGLE_WEBRISK_BASE_URL:https://webrisk.googleapis.com/v1eap1}
google.webrisk.threat-threshold-level=${GOOGLE_WEBRISK_THREAT_THRESHOLD_LEVEL:HIGH}
google.webrisk.connect-timeout-seconds=${GOOGLE_WEBRISK_CONNECT_TIMEOUT_SECONDS:1}
google.webrisk.read-timeout-seconds=${GOOGLE_WEBRISK_READ_TIMEOUT_SECONDS:2}

# ===================================================================
# RESILIENCE4J CONFIGURATION
# ===================================================================
# This configures a circuit breaker for the Web Risk API client.
resilience4j.circuitbreaker.instances.webRiskApi.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.webRiskApi.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.webRiskApi.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.webRiskApi.sliding-window-size=10
resilience4j.circuitbreaker.instances.webRiskApi.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.webRiskApi.record-exceptions[0]=com.ws.phishguard.exception.WebRiskApiException
resilience4j.circuitbreaker.instances.webRiskApi.record-exceptions[1]=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.webRiskApi.record-exceptions[2]=java.io.IOException